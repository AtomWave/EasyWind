//========================================================================================================================================================
.products {
	display: flex;
	position: relative;
	z-index: 0;
	justify-content: center;
	width: 100%;
	flex-wrap: wrap;
	list-style: none;
	margin: 0 -20px 0 0;
	padding: 0;
}

.ProductItem {
	height: 100%;
	width: 30%;
	position: relative;
	margin-bottom: 40px;
	// box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
	// margin: 5px;
	// padding: 10px;

	// .ProductItem__Info
	&__Info {
		position: relative;
		margin: 0;
		font-size: 1em;
		line-height: 1.4em;
		height: auto;
		overflow: hidden;
		color: #000;
		padding: 20px 0 0 27px;
		text-align: left;
	}
	// .ProductItem__Title
	&__Title {
		margin-bottom: 5px;
		height: 60px;
	}

	.productKey {
	}

	// .ProductItem__Colour
	&__Colour {
		font-weight: 400;
		color: #707071;
		font-size: 16px;
		line-height: 30px;
		margin-bottom: 10px;
	}
	// .ProductItem__PriceList
	&__PriceList {
	}
	// .ProductItem__Price
	&__Price {
	}
}

/* Здесь начинается наша карусель с основной оболочкой
относительно позиционированы, так что наши абсолютно позиционированные элементы
В правильном месте.*/
// .carousel-wrapper {
// 	// position: relative;
// 	// width: 30%;
// 	// display: block;
// 	// text-decoration: none;
// 	// z-index: 0;
// 	// height: 300px;

// 	/* Наши абсолютно позиционированные элементы карусели охватывают ширину и
//    высота своего родителя. Мы делаем их прозрачными по умолчанию, поэтому
//    что они исчезают, когда мы прокручиваем их, используя ссылки со стрелками. */
// 	.carousel-item {
// 		// position: absolute;
// 		// top: 0;
// 		// bottom: 0;
// 		// left: 0;
// 		// right: 0;
// 		// opacity: 0;
// 		// width: 100%;

// 		img {
// 			// overflow: hidden;
// 			// width: 100%;
// 			// transition: all 0.5s ease-in-out;
// 			// &:hover {
// 			// 	transform: scale(1.05);
// 			// }
// 		}

// 		.heading {
// 			// color: #000;
// 		}

// 		/* Вы заметили отступ слева и справа на 50 пикселей вверху? Это так
//      мы можем расположить наши стрелочные ссылки! Каждый из них будет шириной 50 пикселей. Также,
//      Я использую пустые ссылки с фоновым изображением, чтобы ссылки
//      похожи на стрелки. Убедитесь, что вы заменили этот URL-адрес фактическим
//      URL, чтобы ваши ссылки со стрелками были не просто прозрачными прямоугольниками. */
// 		.arrow {
// 			// position: absolute;
// 			// top: 0;
// 			// display: block;
// 			// width: 50px;
// 			// height: 100%;
// 			// -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
// 			// background: url("../img/icons/arrow-prev.png") 50% 50% / 20px no-repeat;
// 			// z-index: 10;

// 			/* Поместим нашу стрелку, чтобы вернуться влево.  */
// 			&.arrow-prev {
// 				// left: 20px;
// 			}

// 			/* И наша стрелка идти вперед справа. Так как я использую
//        одно и то же изображение стрелки для обеих моих стрелок, я поворачиваю это на
//        на 180 градусов, чтобы он указывал в правильном направлении  */
// 			&.arrow-next {
// 				// right: 20px;
// 				// -webkit-transform: rotate(180deg);
// 				// transform: rotate(180deg);
// 			}
// 		}

// 		/* Мне очень нравится, как эти элементы карусели выглядят на темном изображении
//      фон, поэтому, если элемент div .carousel имеет класс «свет»,
//      мы сделаем его цвет текста белым и используем белую стрелку вместо
//      темно-серый. Опять же, убедитесь, что это изображение стрелки существует где-то */
// 		&.light {
// 			// color: white;

// 			.arrow {
// 				// background: url("../img/icons/arrow-light.png") 50% 50% / 20px no-repeat;
// 			}
// 		}

// 		/* Используем некоторые медиа-запросы для изменения размера стрелок
//      на небольших устройствах.*/
// 		// @media (max-width: 480px) {
// 		// 	.arrow,
// 		// 	&.light .arrow {
// 		// 		background-size: 10px;
// 		// 		background-position: 10px 50%;
// 		// 	}
// 		// }
// 	}
// }

.carousel-wrapper {
	position: relative;
	height: 260px;
	width: 100%;
	display: block;
	text-decoration: none;
	z-index: 0;
	&:hover {
		.arrow {
			opacity: 1;
		}
		.quick-view-button {
			opacity: 1;
		}
	}
}

.carousel-item {
	position: absolute;
	top: 0;
	bottom: 0;
	left: 0;
	right: 0;
	opacity: 0;
	width: 100%;
	height: 100%;
}

.product-photo {
	position: relative;
	padding-bottom: 100%;
	overflow: hidden;
	margin-bottom: 20px;
	img {
		position: absolute;
		top: 0;
		bottom: 0;
		left: 0;
		right: 0;
		max-width: 100%;
		max-height: 100%;
		margin: auto;
		transition: transform 0.4s ease-out;
		&.first {
			opacity: 1;
		}
		&.second {
			opacity: 0;
		}
		&:hover {
			transform: scale(1.02);
			&.first {
				opacity: 0;
			}
			&.second {
				opacity: 1;
				transition: all 0.2s ease-out;
			}
		}
	}
}

.arrow {
	position: absolute;
	top: 45%;
	display: block;
	width: 20px;
	height: 50px;
	background: url("../img/icons/arrow-prev-grey.png") 50% 50% / 30px no-repeat;
	z-index: 10;
	opacity: 0;
	transition: 0.3s all linear;
	cursor: pointer;
	&:hover {
		background: url("../img/icons/arrow-prev.png") 50% 50% / 30px no-repeat;
	}
}
.arrow-prev {
	left: 35px;
}
.arrow-next {
	right: 35px;
	-webkit-transform: rotate(180deg);
	transform: rotate(180deg);
}

.quick-view-button {
	display: block;
	position: absolute;
	top: 15px;
	right: 25px;
	z-index: 10;
	opacity: 0;
	height: 40px;
	width: 40px;
	cursor: pointer;
	transition: 0.3s all linear;
	&:hover {
		transform: scale(1.1);
	}
}
.product-preview {
	img {
		width: 20px;
		height: 20px;
	}
}
//========================================================================================================================================================

.product-laikra-1 {
	/* Давайте установим для нашей ссылки перехода цель display: none;, чтобы не
  чтобы браузер переходил к верхней части карусели всякий раз, когда пользователь
  нажимает на одну из наших ссылок со стрелками. Этот селектор атрибутов будет нацелен на
  любой элемент, чей id начинается с 'target-item'.*/
	[id^="target-item"] {
		display: none;
	}

	/* Давайте установим цели для нашей ссылки для перехода display: none; так что мы не
   заставлять браузер переходить к началу карусели всякий раз, когда пользователь
   нажимает на одну из наших ссылок со стрелками. Этот селектор атрибутов будет нацелен
   любой элемент, идентификатор которого начинается с «целевой элемент». */
	.item-1-1 {
		z-index: 2;
		opacity: 1;
	}

	/* Но мы не хотим, чтобы первый элемент ВСЕГДА был opacity: 1; в противном случае
   он проглядывал бы при циклическом переключении между элементами два и выше.  */
	*:target ~ .item-1-1 {
		opacity: 0;
	}

	/* ...но если целью является #target-item-1, нам нужен первый элемент
   для отображения, поэтому мы выбираем его с помощью селектора ~ sibling и
   снова установив его непрозрачность на 1 :-) */
	#target-item-1-1:target ~ .item-1-1 {
		opacity: 1;
	}

	/* Если целью является какой-либо другой target-item-#, давайте выберем его с помощью родственного элемента
   селектор, сделайте так, чтобы он исчезал, и поместите его поверх стопки, используя z-index: 3.
   Здесь вы можете добавить дополнительные целевые элементы, если в вашей карусели более трех
   предметы. Возможно, стоит сразу добавить около 10 пунктов.  */
	#target-item-1-2:target ~ .item-1-2,
	#target-item-1-3:target ~ .item-1-3 {
		z-index: 3;
		opacity: 1;
	}
}
.product-laikra-2 {
	[id^="target-item"] {
		display: none;
	}

	.item-2-1 {
		z-index: 2;
		opacity: 1;
	}

	*:target ~ .item-2-1 {
		opacity: 0;
	}

	#target-item-2-1:target ~ .item-2-1 {
		opacity: 1;
	}

	#target-item-2-2:target ~ .item-2-2,
	#target-item-2-3:target ~ .item-2-3 {
		z-index: 3;
		opacity: 1;
	}
}
.product-laikra-3 {
	[id^="target-item"] {
		display: none;
	}

	.item-3-1 {
		z-index: 2;
		opacity: 1;
	}

	*:target ~ .item-3-1 {
		opacity: 0;
	}

	#target-item-3-1:target ~ .item-3-1 {
		opacity: 1;
	}

	#target-item-3-2:target ~ .item-3-2,
	#target-item-3-3:target ~ .item-3-3 {
		z-index: 3;
		opacity: 1;
	}
}
.product-laikra-4 {
	[id^="target-item"] {
		display: none;
	}

	.item-4-1 {
		z-index: 2;
		opacity: 1;
	}

	*:target ~ .item-4-1 {
		opacity: 0;
	}

	#target-item-4-1:target ~ .item-4-1 {
		opacity: 1;
	}

	#target-item-4-2:target ~ .item-4-2,
	#target-item-4-3:target ~ .item-4-3 {
		z-index: 3;
		opacity: 1;
	}
}

//========================================================================================================================================================
